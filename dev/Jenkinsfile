pipeline {
    agent any

    tools {
        nodejs 'node24'
    }

    environment {
        DOCKER_COMPOSE = 'docker compose'
        WORKSPACE_DIR = 'dev'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
                sh '''
                    echo "Current directory: $(pwd)"
                    echo "Listing all files:"
                    ls -la
                    echo "Listing dev directory:"
                    ls -la dev/
                    echo "Listing dev/back directory:"
                    ls -la dev/back/
                '''
            }
        }

        stage('Verify Workspace') {
            steps {
                dir("${WORKSPACE_DIR}") {
                    sh '''
                        echo "Current directory: $(pwd)"
                        echo "Listing all files:"
                        ls -la
                        echo "Checking if package.json exists:"
                        test -f back/package.json && echo "package.json exists" || echo "package.json not found"
                    '''
                }
            }
        }

        stage('Build Frontend') {
            steps {
                dir("${WORKSPACE_DIR}/front/caei_training_front") {
                    sh '''
                        echo "Current directory: $(pwd)"
                        echo "Listing all files:"
                        ls -la
                        npm install
                        npm run build
                    '''
                }
            }
        }

        stage('Build Backend') {
            steps {
                dir("${WORKSPACE_DIR}/back") {
                    sh '''
                        echo "Current directory: $(pwd)"
                        echo "Listing all files:"
                        ls -la
                        echo "Contents of package.json:"
                        cat package.json
                        npm install
                    '''
                }
            }
        }





        stage('Setup Docker') {
            steps {
                sh '''
                    # Check if Docker is installed
                    if ! command -v docker &> /dev/null; then
                        echo "Installing Docker..."
                        curl -fsSL https://get.docker.com -o get-docker.sh
                        sh get-docker.sh
                    fi
                    
                    # Add jenkins user to docker group
                    sudo usermod -aG docker jenkins
                    
                    # Verify Docker installation
                    docker --version
                    
                    # Verify Docker Compose
                    docker compose version
                '''
            }
        }

        stage('Build Docker Images') {
            steps {
                sh '''
                    # Use docker compose command
                    docker compose build
                '''
            }
        }

        stage('Deploy') {
            steps {
                sh '''
                    docker compose down
                    docker compose up -d
                '''
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
