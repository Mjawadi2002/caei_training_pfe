pipeline {
    agent any

    tools {
        nodejs 'node24'
    }

    environment {
        DOCKER_COMPOSE = 'docker compose'
        WORKSPACE_DIR = 'dev'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
                sh '''
                    echo "Current directory: $(pwd)"
                    echo "Listing all files:"
                    ls -la
                    echo "Listing dev directory:"
                    ls -la dev/
                    echo "Listing dev/back directory:"
                    ls -la dev/back/
                '''
            }
        }

        stage('Verify Workspace') {
            steps {
                dir("${WORKSPACE_DIR}") {
                    sh '''
                        echo "Current directory: $(pwd)"
                        echo "Listing all files:"
                        ls -la
                        echo "Checking if package.json exists:"
                        test -f back/package.json && echo "package.json exists" || echo "package.json not found"
                    '''
                }
            }
        }

        stage('Build Frontend') {
            steps {
                dir("${WORKSPACE_DIR}/front/caei_training_front") {
                    sh '''
                        echo "Current directory: $(pwd)"
                        echo "Listing all files:"
                        ls -la
                        npm install
                        npm run build
                    '''
                }
            }
        }

        stage('Build Backend') {
            steps {
                dir("${WORKSPACE_DIR}/back") {
                    sh '''
                        echo "Current directory: $(pwd)"
                        echo "Listing all files:"
                        ls -la
                        echo "Contents of package.json:"
                        cat package.json
                        npm install
                    '''
                }
            }
        }

        stage('Setup Docker') {
            steps {
                sh '''
                    echo "Checking system information..."
                    echo "OS: $(uname -a)"
                    echo "Current user: $(whoami)"
                    echo "Current directory: $(pwd)"
                    
                    echo "Checking Docker installation..."
                    if command -v docker &> /dev/null; then
                        echo "Docker is installed at: $(which docker)"
                        docker --version
                    else
                        echo "Docker command not found in PATH"
                        echo "Checking common Docker installation locations..."
                        ls -l /usr/bin/docker 2>/dev/null || echo "Docker not found in /usr/bin"
                        ls -l /usr/local/bin/docker 2>/dev/null || echo "Docker not found in /usr/local/bin"
                    fi
                    
                    echo "Checking Docker service status..."
                    if systemctl is-active --quiet docker 2>/dev/null; then
                        echo "Docker service is running"
                    else
                        echo "Docker service is not running"
                    fi
                    
                    echo "Checking Docker socket..."
                    if [ -S /var/run/docker.sock ]; then
                        echo "Docker socket exists"
                        ls -l /var/run/docker.sock
                    else
                        echo "Docker socket not found"
                    fi
                    
                    echo "Checking Docker Compose..."
                    if command -v docker-compose &> /dev/null; then
                        echo "Docker Compose is installed at: $(which docker-compose)"
                        docker-compose --version
                    elif docker compose version &> /dev/null; then
                        echo "Docker Compose plugin is available"
                        docker compose version
                    else
                        echo "Docker Compose not found"
                    fi
                    
                    # Try to run a simple Docker command
                    echo "Testing Docker functionality..."
                    if docker info &> /dev/null; then
                        echo "Docker is working properly"
                    else
                        echo "Docker is not working properly"
                        echo "Error: $(docker info 2>&1)"
                    fi
                '''
            }
        }

        stage('Build Docker Images') {
            steps {
                sh '''
                    echo "Attempting to build Docker images..."
                    docker compose build
                '''
            }
        }

        stage('Deploy') {
            steps {
                sh '''
                    echo "Attempting to deploy..."
                    docker compose down
                    docker compose up -d
                '''
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
