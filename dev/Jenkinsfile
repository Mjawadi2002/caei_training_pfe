pipeline {
    agent any

    tools {
        nodejs 'node24'
    }

    environment {
        DOCKER_COMPOSE = 'docker-compose'
        WORKSPACE_DIR = 'dev'
    }

    stages {
        stage('Setup Docker Compose') {
            steps {
                sh '''
                    echo "Installing docker-compose..."
                    curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                    chmod +x /usr/local/bin/docker-compose
                    ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
                    
                    echo "Verifying installations..."
                    docker --version
                    docker-compose --version
                '''
            }
        }

        stage('Checkout') {
            steps {
                checkout scm
                sh '''
                    echo "Current directory: $(pwd)"
                    echo "Listing all files:"
                    ls -la
                    echo "Listing dev directory:"
                    ls -la dev/
                    echo "Listing dev/back directory:"
                    ls -la dev/back/
                '''
            }
        }

        stage('Verify Workspace') {
            steps {
                dir("${WORKSPACE_DIR}") {
                    sh '''
                        echo "Current directory: $(pwd)"
                        echo "Listing all files:"
                        ls -la
                        echo "Checking if package.json exists:"
                        test -f back/package.json && echo "package.json exists" || echo "package.json not found"
                    '''
                }
            }
        }

        stage('Build Frontend') {
            steps {
                dir("${WORKSPACE_DIR}/front/caei_training_front") {
                    sh '''
                        echo "Current directory: $(pwd)"
                        echo "Listing all files:"
                        ls -la
                        npm install
                        npm run build
                    '''
                }
            }
        }

        stage('Build Backend') {
            steps {
                dir("${WORKSPACE_DIR}/back") {
                    sh '''
                        echo "Current directory: $(pwd)"
                        echo "Listing all files:"
                        ls -la
                        echo "Contents of package.json:"
                        cat package.json
                        npm install
                    '''
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                sh '''
                    echo "Verifying Docker installation..."
                    docker --version
                    docker-compose --version
                    
                    echo "Building Docker images..."
                    cd ${WORKSPACE_DIR}
                    ${DOCKER_COMPOSE} build --no-cache
                    
                    echo "Listing built images..."
                    docker images
                '''
            }
        }

        stage('Deploy') {
            steps {
                sh '''
                    echo "Stopping existing containers..."
                    cd ${WORKSPACE_DIR}
                    ${DOCKER_COMPOSE} down
                    
                    echo "Starting containers..."
                    ${DOCKER_COMPOSE} up -d
                    
                    echo "Checking container status..."
                    docker ps
                '''
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
