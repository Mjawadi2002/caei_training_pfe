pipeline {
    agent any

    tools {
        nodejs 'nodejs20' 
    }

    environment {
        WORKSPACE_DIR = 'dev'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
                sh '''
                    echo "Checked out code:"
                    ls -la
                    ls -la ${WORKSPACE_DIR}
                '''
            }
        }

        stage('Verify Workspace') {
            steps {
                dir("${WORKSPACE_DIR}") {
                    sh '''
                        echo "Verifying workspace structure..."
                        echo "Listing files:"
                        ls -la
                        test -f front/caei_training_front/package.json && echo "Frontend package.json found" || echo "Frontend package.json missing"
                        test -f back/package.json && echo "Backend package.json found" || echo "Backend package.json missing"
                    '''
                }
            }
        }

        stage('Build Frontend') {
            steps {
                dir("${WORKSPACE_DIR}/front/caei_training_front") {
                    sh '''
                        echo "Building frontend..."
                        npm install
                        npm run build
                    '''
                }
            }
        }

        stage('Build Backend') {
            steps {
                dir("${WORKSPACE_DIR}/back") {
                    sh '''
                        echo "Building backend..."
                        npm install
                        npm run build || echo "No build script for backend, skipping"
                    '''
                }
            }
        }

        stage('Deploy') {
            steps {
                sh '''
                    echo "-----------------------------------------"
                    echo "âœ… Deployment stage executed successfully!"
                    echo "This is where deployment would happen."
                    echo "-----------------------------------------"
                '''
            }
        }

    }

    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
